<?xml version="1.0"?>
<robot name="butler_agent" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Define materials -->
  <material name="Blue">
    <color rgba="0 0 0.8 1"/>
  </material>
  <material name="Black">
    <color rgba="0.1 0.1 0.1 1"/>
  </material>
  <material name="Red">
    <color rgba="1 0 0 1"/>
  </material>

  <!-- Properties -->
  <xacro:property name="body_radius" value="0.2"/>
  <xacro:property name="body_height" value="0.1"/>
  <xacro:property name="wheel_radius" value="0.05"/>
  <xacro:property name="wheel_width" value="0.03"/>
  <xacro:property name="wheel_separation" value="${body_radius*2}"/>

  <!-- Namespace argument -->
  <xacro:arg name="namespace" default=""/>

  <!-- Add dummy base_footprint link for KDL inertia warning workaround -->
  <link name="base_footprint"/>

  <joint name="base_footprint_joint" type="fixed">
    <parent link="base_link"/>
    <child link="base_footprint"/>
    <origin xyz="0 0 ${-body_height/2}" rpy="0 0 0"/>
  </joint>

  <!-- Base link -->
  <link name="base_link">
    <visual>
      <geometry>
        <cylinder radius="${body_radius}" length="${body_height}"/>
      </geometry>
      <material name="blue">
        <color rgba="0 0 0.8 1"/>
      </material>
      <material name="Blue"/>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="${body_radius}" length="${body_height}"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1.0"/>
      <inertia ixx="0.1" ixy="0" ixz="0" iyy="0.1" iyz="0" izz="0.1"/>
    </inertial>
  </link>

  <!-- Left wheel -->
  <link name="left_wheel">
    <visual>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
      </geometry>
      <material name="black">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
      <material name="Black"/>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.5"/>
      <inertia ixx="0.01" ixy="0" ixz="0" iyy="0.01" iyz="0" izz="0.01"/>
    </inertial>
  </link>

  <joint name="left_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="left_wheel"/>
    <origin xyz="0 ${wheel_separation/2} 0" rpy="${pi/2} 0 0"/>
    <axis xyz="0 0 1"/>
  </joint>

  <!-- Right wheel -->
  <link name="right_wheel">
    <visual>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
      </geometry>
      <material name="black">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
      <material name="Black"/>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.5"/>
      <inertia ixx="0.01" ixy="0" ixz="0" iyy="0.01" iyz="0" izz="0.01"/>
    </inertial>
  </link>

  <joint name="right_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="right_wheel"/>
    <origin xyz="0 -${wheel_separation/2} 0" rpy="${pi/2} 0 0"/>
    <axis xyz="0 0 1"/>
  </joint>

  <!-- Laser scanner -->
  <link name="laser">
    <visual>
      <geometry>
        <cylinder radius="0.05" length="0.02"/>
      </geometry>
      <material name="red">
        <color rgba="1 0 0 1"/>
      </material>
      <material name="Red"/>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="0.05" length="0.02"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.1"/>
      <inertia ixx="0.01" ixy="0" ixz="0" iyy="0.01" iyz="0" izz="0.01"/>
    </inertial>
  </link>

  <joint name="laser_joint" type="fixed">
    <parent link="base_link"/>
    <child link="laser"/>
    <origin xyz="0 0 ${body_height/2 + 0.01}" rpy="0 0 0"/>
  </joint>

  <!-- Differential drive plugin -->
  <gazebo>
    <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
      <leftJoint>left_wheel_joint</leftJoint>
      <rightJoint>right_wheel_joint</rightJoint>
      <wheelSeparation>${wheel_separation}</wheelSeparation>
      <wheelDiameter>${2*wheel_radius}</wheelDiameter>
      <robotBaseFrame>$(arg namespace)/base_link</robotBaseFrame>
      <odometrySource>encoder</odometrySource>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>$(arg namespace)/odom</odometryFrame>
      <publishOdomTF>true</publishOdomTF>
      <publishWheelTF>false</publishWheelTF>
      <publishTf>true</publishTf>
      <publishWheelJointState>true</publishWheelJointState>
      <updateRate>50</updateRate>
      <commandTopic>cmd_vel</commandTopic>
      <wheelAcceleration>0</wheelAcceleration>
      <wheelTorque>5</wheelTorque>
      <rosDebugLevel>na</rosDebugLevel>
      <robotNamespace>$(arg namespace)</robotNamespace>
      <namespace>$(arg namespace)</namespace>
    </plugin>
  </gazebo>

  <!-- Laser scanner plugin -->
  <gazebo reference="laser">
    <sensor type="ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>20</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-3.14159</min_angle>
            <max_angle>3.14159</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.15</min>
          <max>10.0</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>scan</topicName>
        <frameName>$(arg namespace)/laser</frameName>
        <!-- Add namespace if provided -->
        <xacro:if value="${'$(arg namespace)' != ''}">
          <robotNamespace>$(arg namespace)</robotNamespace>
        </xacro:if>
      </plugin>
    </sensor>
  </gazebo>
</robot>